# Generated by Django 3.2.9 on 2021-12-04 17:32

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnswerChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(default='Текст задания', max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Заголовок вопроса', max_length=64)),
                ('text', models.TextField(default='Условие задания')),
                ('task_type', models.CharField(choices=[('FULL', 'Полный ответ'), ('SINGLE', 'Выбор одного'), ('MANY', 'Выбор нескольких')], default='SINGLE', max_length=150, verbose_name='Тип задания')),
                ('answer', models.CharField(max_length=256)),
                ('answer_choice', models.ManyToManyField(blank=True, to='main.AnswerChoice')),
            ],
        ),
        migrations.CreateModel(
            name='AnswerDone',
            fields=[
                ('answerchoice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.answerchoice')),
                ('task_id', models.IntegerField()),
                ('test_id', models.IntegerField()),
            ],
            bases=('main.answerchoice',),
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Заголовок теста', max_length=64)),
                ('limit', models.IntegerField(default=1, verbose_name='n')),
                ('slug', models.SlugField(unique=True, verbose_name='Ссылка')),
                ('tasks', models.ManyToManyField(to='main.Task')),
            ],
        ),
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('gender', models.CharField(choices=[('Муж', 'Мужской'), ('Жен', 'Женский')], default='Муж', max_length=3, verbose_name='Пол')),
                ('first_name', models.CharField(max_length=32, verbose_name='Имя')),
                ('second_name', models.CharField(max_length=32, verbose_name='Фамилия')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('test_passed', models.ManyToManyField(to='main.Test')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.test')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.myuser')),
                ('answers', models.ManyToManyField(to='main.AnswerDone')),
            ],
        ),
    ]
